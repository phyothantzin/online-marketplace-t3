"use client";
import { Cart } from "@prisma/client";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";

function CartItemRow({ cartItem }: { cartItem: Cart }) {
  const updateItemQuantity = api.listing.updateCartItemQuantity.useMutation();
  const removeCartItem = api.listing.removeCartItem.useMutation();

  return (
    <>
      <th
        scope="row"
        className="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white"
      >
        <img
          className="w-96 rounded-t-lg"
          src={`https://vljhhdzkmaqsnyiewqlk.supabase.co/storage/v1/object/public/marketplace/${cartItem?.itemName.replaceAll(
            " ",
            "-"
          )}?${Date.now()}`}
          alt=""
        />
      </th>
      <th
        scope="row"
        className="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white"
      >
        {cartItem.itemName}
      </th>
      <td className="px-6 py-4">
        <input
          type="number"
          className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
          placeholder=""
          min="1"
          max="99"
          defaultValue={cartItem.quantity}
          onChange={(e) => {
            updateItemQuantity.mutateAsync({
              itemId: cartItem.id,
              newQuantity: parseInt(e.target.value),
            });
          }}
        />
      </td>
      <td className="px-6 py-4">${cartItem.itemPrice}</td>
      <td className=" py-4">
        <button
          onClick={() =>
            removeCartItem
              .mutateAsync({ itemId: cartItem.id })
              .then(() => window.location.reload())
          }
          type="button"
          className="mr-2 rounded-lg border border-red-700 px-2 text-center text-sm font-medium text-red-700 transition hover:bg-red-800 hover:text-white focus:outline-none focus:ring-4 focus:ring-red-300 dark:border-red-500 dark:text-red-500 dark:hover:bg-red-600 dark:hover:text-white dark:focus:ring-red-900 sm:px-3 sm:py-1 md:px-4 md:py-2 lg:px-5 lg:py-2.5"
        >
          X
        </button>
      </td>
    </>
  );
}

export default function CartPage() {
  const { data, error, isLoading } = api.listing.getCart.useQuery();
  const cartItems = data;
  let totalPrice = 0;
  let totalQuantity = 0;

  for (let i = 0; i < cartItems?.length; i++) {
    totalPrice = totalPrice + cartItems[i]?.itemPrice * cartItems[i]?.quantity;
    totalQuantity = totalQuantity + cartItems[i]?.quantity;
  }

  return (
    <>
      <Head>
        <title>Online Market Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gray-900 px-12 py-2">
        <h1 className="my-4 text-4xl">Your Cart</h1>

        <div className="relative overflow-x-auto">
          <table className="w-full text-left text-sm text-gray-500 dark:text-gray-400">
            <thead className="bg-gray-100 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="rounded-l-lg px-6 py-3">
                  Product Image
                </th>
                <th scope="col" className="px-6 py-3">
                  Product name
                </th>
                <th scope="col" className="px-6 py-3">
                  Qty
                </th>
                <th scope="col" className="px-6 py-3">
                  Price
                </th>
                <th scope="col" className="rounded-r-lg px-6 py-3"></th>
              </tr>
            </thead>
            <tbody>
              {cartItems
                ? cartItems.map((cartItem) => (
                    <tr className="bg-white dark:bg-gray-800">
                      <CartItemRow cartItem={cartItem} />
                    </tr>
                  ))
                : ""}
            </tbody>
            <tfoot>
              <tr className="font-semibold text-gray-900 dark:text-white">
                <th scope="row" className="px-6 py-3 text-base">
                  Total
                </th>
                <td className="px-6 py-3">{totalQuantity}</td>
                <td className="px-6 py-3">{totalPrice.toFixed(2)}</td>
              </tr>
            </tfoot>
          </table>
        </div>
      </main>
    </>
  );
}
